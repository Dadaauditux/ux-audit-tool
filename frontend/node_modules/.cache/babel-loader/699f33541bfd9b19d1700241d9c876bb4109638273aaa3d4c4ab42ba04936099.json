{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Meteor\\\\ux-audit-tool\\\\frontend\\\\src\\\\LegendPanel.jsx\";\n// frontend/src/LegendPanel.jsx\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst issueTypes = [{\n  type: \"text\",\n  color: \"orange\",\n  label: \"Texte trop petit\"\n}, {\n  type: \"contrast\",\n  color: \"red\",\n  label: \"Contraste insuffisant\"\n}, {\n  type: \"button\",\n  color: \"blue\",\n  label: \"Bouton trop petit\"\n}, {\n  type: \"heading-hierarchy\",\n  color: \"purple\",\n  label: \"Hiérarchie des titres\"\n}, {\n  type: \"spacing\",\n  color: \"green\",\n  label: \"Problème d'espacement\"\n}, {\n  type: \"alignment\",\n  color: \"pink\",\n  label: \"Problème d'alignement\"\n}];\nexport default function LegendPanel({\n  visibleTypes,\n  toggleType\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"10px\",\n      border: \"1px solid #ccc\",\n      marginTop: \"10px\",\n      width: 300\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"L\\xE9gende des erreurs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), issueTypes.map(({\n      type,\n      color,\n      label\n    }) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: visibleTypes.includes(type),\n        onChange: () => toggleType(type),\n        id: type\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: type,\n        style: {\n          marginLeft: 8\n        },\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color\n          },\n          children: label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this)]\n    }, type, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\n_c = LegendPanel;\nvar _c;\n$RefreshReg$(_c, \"LegendPanel\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","issueTypes","type","color","label","LegendPanel","visibleTypes","toggleType","style","padding","border","marginTop","width","children","fileName","_jsxFileName","lineNumber","columnNumber","map","checked","includes","onChange","id","htmlFor","marginLeft","_c","$RefreshReg$"],"sources":["C:/Users/Meteor/ux-audit-tool/frontend/src/LegendPanel.jsx"],"sourcesContent":["// frontend/src/LegendPanel.jsx\r\nimport React from \"react\";\r\n\r\nconst issueTypes = [\r\n  { type: \"text\", color: \"orange\", label: \"Texte trop petit\" },\r\n  { type: \"contrast\", color: \"red\", label: \"Contraste insuffisant\" },\r\n  { type: \"button\", color: \"blue\", label: \"Bouton trop petit\" },\r\n  { type: \"heading-hierarchy\", color: \"purple\", label: \"Hiérarchie des titres\" },\r\n  { type: \"spacing\", color: \"green\", label: \"Problème d'espacement\" },\r\n  { type: \"alignment\", color: \"pink\", label: \"Problème d'alignement\" }\r\n];\r\n\r\nexport default function LegendPanel({ visibleTypes, toggleType }) {\r\n  return (\r\n    <div style={{ padding: \"10px\", border: \"1px solid #ccc\", marginTop: \"10px\", width: 300 }}>\r\n      <h3>Légende des erreurs</h3>\r\n      {issueTypes.map(({ type, color, label }) => (\r\n        <div key={type}>\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={visibleTypes.includes(type)}\r\n            onChange={() => toggleType(type)}\r\n            id={type}\r\n          />\r\n          <label htmlFor={type} style={{ marginLeft: 8 }}>\r\n            <span style={{ color }}>{label}</span>\r\n          </label>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,UAAU,GAAG,CACjB;EAAEC,IAAI,EAAE,MAAM;EAAEC,KAAK,EAAE,QAAQ;EAAEC,KAAK,EAAE;AAAmB,CAAC,EAC5D;EAAEF,IAAI,EAAE,UAAU;EAAEC,KAAK,EAAE,KAAK;EAAEC,KAAK,EAAE;AAAwB,CAAC,EAClE;EAAEF,IAAI,EAAE,QAAQ;EAAEC,KAAK,EAAE,MAAM;EAAEC,KAAK,EAAE;AAAoB,CAAC,EAC7D;EAAEF,IAAI,EAAE,mBAAmB;EAAEC,KAAK,EAAE,QAAQ;EAAEC,KAAK,EAAE;AAAwB,CAAC,EAC9E;EAAEF,IAAI,EAAE,SAAS;EAAEC,KAAK,EAAE,OAAO;EAAEC,KAAK,EAAE;AAAwB,CAAC,EACnE;EAAEF,IAAI,EAAE,WAAW;EAAEC,KAAK,EAAE,MAAM;EAAEC,KAAK,EAAE;AAAwB,CAAC,CACrE;AAED,eAAe,SAASC,WAAWA,CAAC;EAAEC,YAAY;EAAEC;AAAW,CAAC,EAAE;EAChE,oBACEP,OAAA;IAAKQ,KAAK,EAAE;MAAEC,OAAO,EAAE,MAAM;MAAEC,MAAM,EAAE,gBAAgB;MAAEC,SAAS,EAAE,MAAM;MAAEC,KAAK,EAAE;IAAI,CAAE;IAAAC,QAAA,gBACvFb,OAAA;MAAAa,QAAA,EAAI;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC3BhB,UAAU,CAACiB,GAAG,CAAC,CAAC;MAAEhB,IAAI;MAAEC,KAAK;MAAEC;IAAM,CAAC,kBACrCJ,OAAA;MAAAa,QAAA,gBACEb,OAAA;QACEE,IAAI,EAAC,UAAU;QACfiB,OAAO,EAAEb,YAAY,CAACc,QAAQ,CAAClB,IAAI,CAAE;QACrCmB,QAAQ,EAAEA,CAAA,KAAMd,UAAU,CAACL,IAAI,CAAE;QACjCoB,EAAE,EAAEpB;MAAK;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACV,CAAC,eACFjB,OAAA;QAAOuB,OAAO,EAAErB,IAAK;QAACM,KAAK,EAAE;UAAEgB,UAAU,EAAE;QAAE,CAAE;QAAAX,QAAA,eAC7Cb,OAAA;UAAMQ,KAAK,EAAE;YAAEL;UAAM,CAAE;UAAAU,QAAA,EAAET;QAAK;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjC,CAAC;IAAA,GATAf,IAAI;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAUT,CACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACQ,EAAA,GAnBuBpB,WAAW;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}