{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Meteor\\\\ux-audit-tool\\\\frontend\\\\src\\\\AnnotatedImage.jsx\",\n  _s = $RefreshSig$();\n// AnnotatedImage.jsx\nimport React from \"react\";\nimport { Stage, Layer, Image as KonvaImage, Rect, Text, Group } from \"react-konva\";\nimport useImage from \"use-image\";\n\n// Palette de couleurs\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst COLORS = {\n  text: {\n    stroke: \"orange\",\n    fill: \"rgba(255,165,0,0.15)\",\n    label: \"orange\"\n  },\n  contrast: {\n    stroke: \"red\",\n    fill: \"rgba(255,0,0,0.15)\",\n    label: \"red\"\n  },\n  button: {\n    stroke: \"blue\",\n    fill: \"rgba(0,0,255,0.15)\",\n    label: \"blue\"\n  },\n  \"heading-hierarchy\": {\n    stroke: \"purple\",\n    fill: \"rgba(128,0,128,0.15)\",\n    label: \"purple\"\n  },\n  spacing: {\n    stroke: \"green\",\n    fill: \"rgba(0,128,0,0.15)\",\n    label: \"green\"\n  },\n  alignment: {\n    stroke: \"deeppink\",\n    fill: \"rgba(255,192,203,0.15)\",\n    label: \"deeppink\"\n  }\n};\nexport default function AnnotatedImage({\n  src,\n  issues,\n  containerWidth\n}) {\n  _s();\n  const [image] = useImage(src);\n  if (!image) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Chargement de l'image...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 22\n  }, this);\n\n  // Échelle responsive\n  const scale = containerWidth ? Math.min(1, containerWidth / image.width) : 1;\n\n  // Tableau des positions déjà utilisées pour éviter les chevauchements\n  const placedLabels = [];\n  return /*#__PURE__*/_jsxDEV(Stage, {\n    width: image.width * scale,\n    height: image.height * scale,\n    scaleX: scale,\n    scaleY: scale,\n    children: /*#__PURE__*/_jsxDEV(Layer, {\n      children: [/*#__PURE__*/_jsxDEV(KonvaImage, {\n        image: image\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), issues.map((issue, i) => {\n        const color = COLORS[issue.type] || COLORS.text;\n        const {\n          x,\n          y,\n          w,\n          h\n        } = issue.boundingBox;\n\n        // Calcul position initiale du label\n        let labelX = x;\n        let labelY = y - 24 < 0 ? y + h + 4 : y - 24;\n\n        // Évite chevauchement : on vérifie toutes les positions déjà placées\n        while (placedLabels.some(pos => Math.abs(pos.x - labelX) < 50 &&\n        // tolérance horizontale\n        Math.abs(pos.y - labelY) < 20 // tolérance verticale\n        )) {\n          labelY += 22; // décale vers le bas\n        }\n\n        // Enregistre cette position comme utilisée\n        placedLabels.push({\n          x: labelX,\n          y: labelY\n        });\n        return /*#__PURE__*/_jsxDEV(Group, {\n          children: [/*#__PURE__*/_jsxDEV(Rect, {\n            x: x,\n            y: y,\n            width: w,\n            height: h,\n            stroke: color.stroke,\n            strokeWidth: 2,\n            dash: [6, 4],\n            cornerRadius: 4,\n            fill: color.fill\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Group, {\n            children: [/*#__PURE__*/_jsxDEV(Rect, {\n              x: labelX,\n              y: labelY,\n              height: 20,\n              fill: color.label,\n              cornerRadius: 4,\n              shadowColor: \"rgba(0,0,0,0.2)\",\n              shadowBlur: 2,\n              shadowOffset: {\n                x: 1,\n                y: 1\n              },\n              shadowOpacity: 0.4,\n              width: issue.message.length * 7 + 12 // largeur auto en fonction du texte\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Text, {\n              x: labelX + 6,\n              y: labelY + 3,\n              text: issue.message,\n              fontSize: 12,\n              fontStyle: \"bold\",\n              fill: \"white\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(AnnotatedImage, \"7iHFm+4ZQcY3NOZmuC1Wyv6gdJ4=\", false, function () {\n  return [useImage];\n});\n_c = AnnotatedImage;\nvar _c;\n$RefreshReg$(_c, \"AnnotatedImage\");","map":{"version":3,"names":["React","Stage","Layer","Image","KonvaImage","Rect","Text","Group","useImage","jsxDEV","_jsxDEV","COLORS","text","stroke","fill","label","contrast","button","spacing","alignment","AnnotatedImage","src","issues","containerWidth","_s","image","children","fileName","_jsxFileName","lineNumber","columnNumber","scale","Math","min","width","placedLabels","height","scaleX","scaleY","map","issue","i","color","type","x","y","w","h","boundingBox","labelX","labelY","some","pos","abs","push","strokeWidth","dash","cornerRadius","shadowColor","shadowBlur","shadowOffset","shadowOpacity","message","length","fontSize","fontStyle","_c","$RefreshReg$"],"sources":["C:/Users/Meteor/ux-audit-tool/frontend/src/AnnotatedImage.jsx"],"sourcesContent":["// AnnotatedImage.jsx\r\nimport React from \"react\";\r\nimport { Stage, Layer, Image as KonvaImage, Rect, Text, Group } from \"react-konva\";\r\nimport useImage from \"use-image\";\r\n\r\n// Palette de couleurs\r\nconst COLORS = {\r\n  text: { stroke: \"orange\", fill: \"rgba(255,165,0,0.15)\", label: \"orange\" },\r\n  contrast: { stroke: \"red\", fill: \"rgba(255,0,0,0.15)\", label: \"red\" },\r\n  button: { stroke: \"blue\", fill: \"rgba(0,0,255,0.15)\", label: \"blue\" },\r\n  \"heading-hierarchy\": { stroke: \"purple\", fill: \"rgba(128,0,128,0.15)\", label: \"purple\" },\r\n  spacing: { stroke: \"green\", fill: \"rgba(0,128,0,0.15)\", label: \"green\" },\r\n  alignment: { stroke: \"deeppink\", fill: \"rgba(255,192,203,0.15)\", label: \"deeppink\" }\r\n};\r\n\r\nexport default function AnnotatedImage({ src, issues, containerWidth }) {\r\n  const [image] = useImage(src);\r\n  if (!image) return <p>Chargement de l'image...</p>;\r\n\r\n  // Échelle responsive\r\n  const scale = containerWidth ? Math.min(1, containerWidth / image.width) : 1;\r\n\r\n  // Tableau des positions déjà utilisées pour éviter les chevauchements\r\n  const placedLabels = [];\r\n\r\n  return (\r\n    <Stage\r\n      width={image.width * scale}\r\n      height={image.height * scale}\r\n      scaleX={scale}\r\n      scaleY={scale}\r\n    >\r\n      <Layer>\r\n        {/* Image de fond */}\r\n        <KonvaImage image={image} />\r\n\r\n        {/* Dessin des zones + labels */}\r\n        {issues.map((issue, i) => {\r\n          const color = COLORS[issue.type] || COLORS.text;\r\n          const { x, y, w, h } = issue.boundingBox;\r\n\r\n          // Calcul position initiale du label\r\n          let labelX = x;\r\n          let labelY = y - 24 < 0 ? y + h + 4 : y - 24;\r\n\r\n          // Évite chevauchement : on vérifie toutes les positions déjà placées\r\n          while (\r\n            placedLabels.some(\r\n              (pos) =>\r\n                Math.abs(pos.x - labelX) < 50 && // tolérance horizontale\r\n                Math.abs(pos.y - labelY) < 20    // tolérance verticale\r\n            )\r\n          ) {\r\n            labelY += 22; // décale vers le bas\r\n          }\r\n\r\n          // Enregistre cette position comme utilisée\r\n          placedLabels.push({ x: labelX, y: labelY });\r\n\r\n          return (\r\n            <Group key={i}>\r\n              {/* Rectangle semi-transparent */}\r\n              <Rect\r\n                x={x}\r\n                y={y}\r\n                width={w}\r\n                height={h}\r\n                stroke={color.stroke}\r\n                strokeWidth={2}\r\n                dash={[6, 4]}\r\n                cornerRadius={4}\r\n                fill={color.fill}\r\n              />\r\n\r\n              {/* Label façon “badge” */}\r\n              <Group>\r\n                <Rect\r\n                  x={labelX}\r\n                  y={labelY}\r\n                  height={20}\r\n                  fill={color.label}\r\n                  cornerRadius={4}\r\n                  shadowColor=\"rgba(0,0,0,0.2)\"\r\n                  shadowBlur={2}\r\n                  shadowOffset={{ x: 1, y: 1 }}\r\n                  shadowOpacity={0.4}\r\n                  width={issue.message.length * 7 + 12} // largeur auto en fonction du texte\r\n                />\r\n                <Text\r\n                  x={labelX + 6}\r\n                  y={labelY + 3}\r\n                  text={issue.message}\r\n                  fontSize={12}\r\n                  fontStyle=\"bold\"\r\n                  fill=\"white\"\r\n                />\r\n              </Group>\r\n            </Group>\r\n          );\r\n        })}\r\n      </Layer>\r\n    </Stage>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}