{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Meteor\\\\ux-audit-tool\\\\frontend\\\\src\\\\AnnotatedImage.jsx\",\n  _s = $RefreshSig$();\n// AnnotatedImage.jsx\nimport React from \"react\";\nimport { Stage, Layer, Image as KonvaImage, Rect, Text, Group } from \"react-konva\";\nimport useImage from \"use-image\";\n\n// Couleurs fixes pour chaque type d'erreur\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst COLORS = {\n  text: {\n    stroke: \"orange\",\n    fill: \"rgba(255,165,0,0.15)\",\n    label: \"orange\"\n  },\n  contrast: {\n    stroke: \"red\",\n    fill: \"rgba(255,0,0,0.15)\",\n    label: \"red\"\n  },\n  button: {\n    stroke: \"blue\",\n    fill: \"rgba(0,0,255,0.15)\",\n    label: \"blue\"\n  },\n  \"heading-hierarchy\": {\n    stroke: \"purple\",\n    fill: \"rgba(128,0,128,0.15)\",\n    label: \"purple\"\n  },\n  spacing: {\n    stroke: \"green\",\n    fill: \"rgba(0,128,0,0.15)\",\n    label: \"green\"\n  },\n  alignment: {\n    stroke: \"pink\",\n    fill: \"rgba(255,192,203,0.15)\",\n    label: \"deeppink\"\n  }\n};\nexport default function AnnotatedImage({\n  src,\n  issues,\n  containerWidth\n}) {\n  _s();\n  const [image] = useImage(src);\n  if (!image) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Chargement de l'image...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 22\n  }, this);\n\n  // Échelle responsive\n  const scale = containerWidth ? Math.min(1, containerWidth / image.width) : 1;\n  return /*#__PURE__*/_jsxDEV(Stage, {\n    width: image.width * scale,\n    height: image.height * scale,\n    scaleX: scale,\n    scaleY: scale,\n    children: /*#__PURE__*/_jsxDEV(Layer, {\n      children: [/*#__PURE__*/_jsxDEV(KonvaImage, {\n        image: image\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), issues.map((issue, i) => {\n        const color = COLORS[issue.type] || COLORS.text;\n        const {\n          x,\n          y,\n          w,\n          h\n        } = issue.boundingBox;\n\n        // Position du label : au-dessus sauf si trop haut\n        const labelY = y - 24 < 0 ? y + h + 4 : y - 24;\n        return /*#__PURE__*/_jsxDEV(Group, {\n          children: [/*#__PURE__*/_jsxDEV(Rect, {\n            x: x,\n            y: y,\n            width: w,\n            height: h,\n            stroke: color.stroke,\n            strokeWidth: 2,\n            dash: [6, 4],\n            cornerRadius: 4,\n            fill: color.fill\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Group, {\n            children: [/*#__PURE__*/_jsxDEV(Rect, {\n              x: x,\n              y: labelY,\n              height: 20,\n              fill: color.label,\n              cornerRadius: 4,\n              shadowColor: \"rgba(0,0,0,0.2)\",\n              shadowBlur: 2,\n              shadowOffset: {\n                x: 1,\n                y: 1\n              },\n              shadowOpacity: 0.4,\n              width: issue.message.length * 7 + 12 // largeur auto\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Text, {\n              x: x + 6,\n              y: labelY + 3,\n              text: issue.message,\n              fontSize: 12,\n              fontStyle: \"bold\",\n              fill: \"white\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_s(AnnotatedImage, \"7iHFm+4ZQcY3NOZmuC1Wyv6gdJ4=\", false, function () {\n  return [useImage];\n});\n_c = AnnotatedImage;\nvar _c;\n$RefreshReg$(_c, \"AnnotatedImage\");","map":{"version":3,"names":["React","Stage","Layer","Image","KonvaImage","Rect","Text","Group","useImage","jsxDEV","_jsxDEV","COLORS","text","stroke","fill","label","contrast","button","spacing","alignment","AnnotatedImage","src","issues","containerWidth","_s","image","children","fileName","_jsxFileName","lineNumber","columnNumber","scale","Math","min","width","height","scaleX","scaleY","map","issue","i","color","type","x","y","w","h","boundingBox","labelY","strokeWidth","dash","cornerRadius","shadowColor","shadowBlur","shadowOffset","shadowOpacity","message","length","fontSize","fontStyle","_c","$RefreshReg$"],"sources":["C:/Users/Meteor/ux-audit-tool/frontend/src/AnnotatedImage.jsx"],"sourcesContent":["// AnnotatedImage.jsx\r\nimport React from \"react\";\r\nimport { Stage, Layer, Image as KonvaImage, Rect, Text, Group } from \"react-konva\";\r\nimport useImage from \"use-image\";\r\n\r\n// Couleurs fixes pour chaque type d'erreur\r\nconst COLORS = {\r\n  text: { stroke: \"orange\", fill: \"rgba(255,165,0,0.15)\", label: \"orange\" },\r\n  contrast: { stroke: \"red\", fill: \"rgba(255,0,0,0.15)\", label: \"red\" },\r\n  button: { stroke: \"blue\", fill: \"rgba(0,0,255,0.15)\", label: \"blue\" },\r\n  \"heading-hierarchy\": { stroke: \"purple\", fill: \"rgba(128,0,128,0.15)\", label: \"purple\" },\r\n  spacing: { stroke: \"green\", fill: \"rgba(0,128,0,0.15)\", label: \"green\" },\r\n  alignment: { stroke: \"pink\", fill: \"rgba(255,192,203,0.15)\", label: \"deeppink\" }\r\n};\r\n\r\nexport default function AnnotatedImage({ src, issues, containerWidth }) {\r\n  const [image] = useImage(src);\r\n\r\n  if (!image) return <p>Chargement de l'image...</p>;\r\n\r\n  // Échelle responsive\r\n  const scale = containerWidth ? Math.min(1, containerWidth / image.width) : 1;\r\n\r\n  return (\r\n    <Stage\r\n      width={image.width * scale}\r\n      height={image.height * scale}\r\n      scaleX={scale}\r\n      scaleY={scale}\r\n    >\r\n      <Layer>\r\n        {/* Image de fond */}\r\n        <KonvaImage image={image} />\r\n\r\n        {/* Marquages */}\r\n        {issues.map((issue, i) => {\r\n          const color = COLORS[issue.type] || COLORS.text;\r\n          const { x, y, w, h } = issue.boundingBox;\r\n\r\n          // Position du label : au-dessus sauf si trop haut\r\n          const labelY = y - 24 < 0 ? y + h + 4 : y - 24;\r\n\r\n          return (\r\n            <Group key={i}>\r\n              {/* Fond semi-transparent */}\r\n              <Rect\r\n                x={x}\r\n                y={y}\r\n                width={w}\r\n                height={h}\r\n                stroke={color.stroke}\r\n                strokeWidth={2}\r\n                dash={[6, 4]}\r\n                cornerRadius={4}\r\n                fill={color.fill}\r\n              />\r\n\r\n              {/* Label */}\r\n              <Group>\r\n                {/* Fond du label */}\r\n                <Rect\r\n                  x={x}\r\n                  y={labelY}\r\n                  height={20}\r\n                  fill={color.label}\r\n                  cornerRadius={4}\r\n                  shadowColor=\"rgba(0,0,0,0.2)\"\r\n                  shadowBlur={2}\r\n                  shadowOffset={{ x: 1, y: 1 }}\r\n                  shadowOpacity={0.4}\r\n                  width={issue.message.length * 7 + 12} // largeur auto\r\n                />\r\n                {/* Texte du label */}\r\n                <Text\r\n                  x={x + 6}\r\n                  y={labelY + 3}\r\n                  text={issue.message}\r\n                  fontSize={12}\r\n                  fontStyle=\"bold\"\r\n                  fill=\"white\"\r\n                />\r\n              </Group>\r\n            </Group>\r\n          );\r\n        })}\r\n      </Layer>\r\n    </Stage>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}